// Mocks generated by Mockito 5.4.6 from annotations
// in chords_app/test/unit/providers/user_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;
import 'dart:typed_data' as _i23;

import 'package:chords_app/models/artist.dart' as _i19;
import 'package:chords_app/models/collection.dart' as _i7;
import 'package:chords_app/models/search_filters.dart' as _i22;
import 'package:chords_app/models/setlist.dart' as _i20;
import 'package:chords_app/models/song.dart' as _i17;
import 'package:chords_app/services/api_service.dart' as _i15;
import 'package:chords_app/services/cache_service.dart' as _i18;
import 'package:chords_app/services/collection_service.dart' as _i21;
import 'package:chords_app/services/liked_songs_service.dart' as _i16;
import 'package:dio/dio.dart' as _i6;
import 'package:file/file.dart' as _i11;
import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i4;
import 'package:firebase_core/firebase_core.dart' as _i3;
import 'package:flutter/foundation.dart' as _i12;
import 'package:flutter_cache_manager/flutter_cache_manager.dart' as _i8;
import 'package:flutter_cache_manager/src/cache_store.dart' as _i9;
import 'package:flutter_cache_manager/src/web/web_helper.dart' as _i10;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIOSOptions_0 extends _i1.SmartFake implements _i2.IOSOptions {
  _FakeIOSOptions_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAndroidOptions_1 extends _i1.SmartFake
    implements _i2.AndroidOptions {
  _FakeAndroidOptions_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLinuxOptions_2 extends _i1.SmartFake implements _i2.LinuxOptions {
  _FakeLinuxOptions_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWindowsOptions_3 extends _i1.SmartFake
    implements _i2.WindowsOptions {
  _FakeWindowsOptions_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebOptions_4 extends _i1.SmartFake implements _i2.WebOptions {
  _FakeWebOptions_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMacOsOptions_5 extends _i1.SmartFake implements _i2.MacOsOptions {
  _FakeMacOsOptions_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_6 extends _i1.SmartFake implements _i3.FirebaseApp {
  _FakeFirebaseApp_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_7 extends _i1.SmartFake
    implements _i4.ActionCodeInfo {
  _FakeActionCodeInfo_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_8 extends _i1.SmartFake
    implements _i5.UserCredential {
  _FakeUserCredential_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_9 extends _i1.SmartFake
    implements _i5.ConfirmationResult {
  _FakeConfirmationResult_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_10 extends _i1.SmartFake implements _i4.UserMetadata {
  _FakeUserMetadata_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_11 extends _i1.SmartFake implements _i5.MultiFactor {
  _FakeMultiFactor_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_12 extends _i1.SmartFake implements _i4.IdTokenResult {
  _FakeIdTokenResult_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_13 extends _i1.SmartFake implements _i5.User {
  _FakeUser_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_14<T> extends _i1.SmartFake implements _i6.Response<T> {
  _FakeResponse_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOptions_15 extends _i1.SmartFake implements _i6.Options {
  _FakeOptions_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCollection_16 extends _i1.SmartFake implements _i7.Collection {
  _FakeCollection_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfig_17 extends _i1.SmartFake implements _i8.Config {
  _FakeConfig_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCacheStore_18 extends _i1.SmartFake implements _i9.CacheStore {
  _FakeCacheStore_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebHelper_19 extends _i1.SmartFake implements _i10.WebHelper {
  _FakeWebHelper_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFile_20 extends _i1.SmartFake implements _i11.File {
  _FakeFile_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileInfo_21 extends _i1.SmartFake implements _i8.FileInfo {
  _FakeFileInfo_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i2.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IOSOptions get iOptions =>
      (super.noSuchMethod(
            Invocation.getter(#iOptions),
            returnValue: _FakeIOSOptions_0(this, Invocation.getter(#iOptions)),
          )
          as _i2.IOSOptions);

  @override
  _i2.AndroidOptions get aOptions =>
      (super.noSuchMethod(
            Invocation.getter(#aOptions),
            returnValue: _FakeAndroidOptions_1(
              this,
              Invocation.getter(#aOptions),
            ),
          )
          as _i2.AndroidOptions);

  @override
  _i2.LinuxOptions get lOptions =>
      (super.noSuchMethod(
            Invocation.getter(#lOptions),
            returnValue: _FakeLinuxOptions_2(
              this,
              Invocation.getter(#lOptions),
            ),
          )
          as _i2.LinuxOptions);

  @override
  _i2.WindowsOptions get wOptions =>
      (super.noSuchMethod(
            Invocation.getter(#wOptions),
            returnValue: _FakeWindowsOptions_3(
              this,
              Invocation.getter(#wOptions),
            ),
          )
          as _i2.WindowsOptions);

  @override
  _i2.WebOptions get webOptions =>
      (super.noSuchMethod(
            Invocation.getter(#webOptions),
            returnValue: _FakeWebOptions_4(
              this,
              Invocation.getter(#webOptions),
            ),
          )
          as _i2.WebOptions);

  @override
  _i2.MacOsOptions get mOptions =>
      (super.noSuchMethod(
            Invocation.getter(#mOptions),
            returnValue: _FakeMacOsOptions_5(
              this,
              Invocation.getter(#mOptions),
            ),
          )
          as _i2.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i12.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#registerListener, [], {#key: key, #listener: listener}),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterListener({
    required String? key,
    required _i12.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#unregisterListener, [], {
      #key: key,
      #listener: listener,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(#unregisterAllListenersForKey, [], {#key: key}),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
    Invocation.method(#unregisterAllListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> write({
    required String? key,
    required String? value,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {
              #key: key,
              #value: value,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> read({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<bool> containsKey({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<void> delete({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<Map<String, String>> readAll({
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i13.Future<Map<String, String>>);

  @override
  _i13.Future<void> deleteAll({
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<bool?> isCupertinoProtectedDataAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isCupertinoProtectedDataAvailable, []),
            returnValue: _i13.Future<bool?>.value(),
          )
          as _i13.Future<bool?>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i5.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_6(this, Invocation.getter(#app)),
          )
          as _i3.FirebaseApp);

  @override
  set app(_i3.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i13.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i4.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i13.Future<_i4.ActionCodeInfo>.value(
              _FakeActionCodeInfo_7(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i13.Future<_i4.ActionCodeInfo>);

  @override
  _i13.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i13.Future<List<String>>.value(<String>[]),
          )
          as _i13.Future<List<String>>);

  @override
  _i13.Future<_i5.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i13.Stream<_i5.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i13.Stream<_i5.User?>.empty(),
          )
          as _i13.Stream<_i5.User?>);

  @override
  _i13.Stream<_i5.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i13.Stream<_i5.User?>.empty(),
          )
          as _i13.Stream<_i5.User?>);

  @override
  _i13.Stream<_i5.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i13.Stream<_i5.User?>.empty(),
          )
          as _i13.Stream<_i5.User?>);

  @override
  _i13.Future<void> sendPasswordResetEmail({
    required String? email,
    _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setPersistence(_i4.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> signInWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i13.Future<_i5.ConfirmationResult>.value(
              _FakeConfirmationResult_9(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i13.Future<_i5.ConfirmationResult>);

  @override
  _i13.Future<_i5.UserCredential> signInWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<void> signInWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i13.Future<String>.value(
              _i14.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i13.Future<String>);

  @override
  _i13.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i4.PhoneMultiFactorInfo? multiFactorInfo,
    required _i4.PhoneVerificationCompleted? verificationCompleted,
    required _i4.PhoneVerificationFailed? verificationFailed,
    required _i4.PhoneCodeSent? codeSent,
    required _i4.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i4.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i5.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i4.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_10(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i4.UserMetadata);

  @override
  List<_i4.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i4.UserInfo>[],
          )
          as List<_i4.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i14.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i5.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_11(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i5.MultiFactor);

  @override
  _i13.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<_i4.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i13.Future<_i4.IdTokenResult>.value(
              _FakeIdTokenResult_12(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i13.Future<_i4.IdTokenResult>);

  @override
  _i13.Future<_i5.UserCredential> linkWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> linkWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> reauthenticateWithProvider(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<_i5.UserCredential> reauthenticateWithPopup(
    _i4.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<void> reauthenticateWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.UserCredential> linkWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<void> linkWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i13.Future<_i5.ConfirmationResult>.value(
              _FakeConfirmationResult_9(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i13.Future<_i5.ConfirmationResult>);

  @override
  _i13.Future<_i5.UserCredential> reauthenticateWithCredential(
    _i4.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i13.Future<_i5.UserCredential>.value(
              _FakeUserCredential_8(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i13.Future<_i5.UserCredential>);

  @override
  _i13.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> sendEmailVerification([
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i5.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i13.Future<_i5.User>.value(
              _FakeUser_13(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i13.Future<_i5.User>);

  @override
  _i13.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updatePhoneNumber(
    _i4.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i15.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<_i6.Response<dynamic>> get(
    String? path, {
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {#queryParameters: queryParameters, #options: options},
            ),
            returnValue: _i13.Future<_i6.Response<dynamic>>.value(
              _FakeResponse_14<dynamic>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {#queryParameters: queryParameters, #options: options},
                ),
              ),
            ),
          )
          as _i13.Future<_i6.Response<dynamic>>);

  @override
  _i13.Future<_i6.Response<dynamic>> post(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i13.Future<_i6.Response<dynamic>>.value(
              _FakeResponse_14<dynamic>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i6.Response<dynamic>>);

  @override
  _i13.Future<_i6.Response<dynamic>> postWithoutApiPrefix(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postWithoutApiPrefix,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i13.Future<_i6.Response<dynamic>>.value(
              _FakeResponse_14<dynamic>(
                this,
                Invocation.method(
                  #postWithoutApiPrefix,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i6.Response<dynamic>>);

  @override
  _i13.Future<_i6.Response<dynamic>> put(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i13.Future<_i6.Response<dynamic>>.value(
              _FakeResponse_14<dynamic>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i6.Response<dynamic>>);

  @override
  _i13.Future<_i6.Response<dynamic>> delete(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i13.Future<_i6.Response<dynamic>>.value(
              _FakeResponse_14<dynamic>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i6.Response<dynamic>>);

  @override
  _i6.Options getAuthOptions(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getAuthOptions, [token]),
            returnValue: _FakeOptions_15(
              this,
              Invocation.method(#getAuthOptions, [token]),
            ),
          )
          as _i6.Options);

  @override
  _i13.Future<_i6.Response<dynamic>> patch(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i13.Future<_i6.Response<dynamic>>.value(
              _FakeResponse_14<dynamic>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i6.Response<dynamic>>);

  @override
  _i13.Future<void> clearCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearCache, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<Map<String, dynamic>> register({
    required String? name,
    required String? email,
    required String? password,
    required bool? termsAccepted,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#register, [], {
              #name: name,
              #email: email,
              #password: password,
              #termsAccepted: termsAccepted,
            }),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<Map<String, dynamic>> loginWithEmail({
    required String? email,
    required String? password,
    required bool? rememberMe,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#loginWithEmail, [], {
              #email: email,
              #password: password,
              #rememberMe: rememberMe,
            }),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<Map<String, dynamic>> loginWithFirebase({
    required String? firebaseToken,
    required String? authProvider,
    String? name,
    required bool? rememberMe,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#loginWithFirebase, [], {
              #firebaseToken: firebaseToken,
              #authProvider: authProvider,
              #name: name,
              #rememberMe: rememberMe,
            }),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<bool> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<Map<String, dynamic>> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<Map<String, dynamic>> updateProfile({
    required String? name,
    String? email,
    String? phoneNumber,
    String? profilePicture,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #name: name,
              #email: email,
              #phoneNumber: phoneNumber,
              #profilePicture: profilePicture,
            }),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<Map<String, dynamic>> sendPasswordResetEmail({
    required String? email,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {#email: email}),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<Map<String, dynamic>> getUserProfile() =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, []),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);
}

/// A class which mocks [LikedSongsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLikedSongsService extends _i1.Mock implements _i16.LikedSongsService {
  MockLikedSongsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<List<_i17.Song>> getLikedSongs({bool? forceSync = false}) =>
      (super.noSuchMethod(
            Invocation.method(#getLikedSongs, [], {#forceSync: forceSync}),
            returnValue: _i13.Future<List<_i17.Song>>.value(<_i17.Song>[]),
          )
          as _i13.Future<List<_i17.Song>>);

  @override
  _i13.Future<bool> likeSong(_i17.Song? song) =>
      (super.noSuchMethod(
            Invocation.method(#likeSong, [song]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> unlikeSong(_i17.Song? song) =>
      (super.noSuchMethod(
            Invocation.method(#unlikeSong, [song]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> toggleLike(_i17.Song? song) =>
      (super.noSuchMethod(
            Invocation.method(#toggleLike, [song]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> isSongLiked(String? songId) =>
      (super.noSuchMethod(
            Invocation.method(#isSongLiked, [songId]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<void> syncAfterLogin() =>
      (super.noSuchMethod(
            Invocation.method(#syncAfterLogin, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> clearLocalDataOnLogout({bool? forceFullClear = false}) =>
      (super.noSuchMethod(
            Invocation.method(#clearLocalDataOnLogout, [], {
              #forceFullClear: forceFullClear,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [CacheService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheService extends _i1.Mock implements _i18.CacheService {
  MockCacheService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  bool shouldUseCacheForSession() =>
      (super.noSuchMethod(
            Invocation.method(#shouldUseCacheForSession, []),
            returnValue: false,
          )
          as bool);

  @override
  _i13.Future<void> clearAllCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllCache, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> cacheSongs(List<_i17.Song>? songs) =>
      (super.noSuchMethod(
            Invocation.method(#cacheSongs, [songs]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i17.Song>?> getCachedSongs() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedSongs, []),
            returnValue: _i13.Future<List<_i17.Song>?>.value(),
          )
          as _i13.Future<List<_i17.Song>?>);

  @override
  _i13.Future<void> cacheArtists(List<_i19.Artist>? artists) =>
      (super.noSuchMethod(
            Invocation.method(#cacheArtists, [artists]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i19.Artist>?> getCachedArtists() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedArtists, []),
            returnValue: _i13.Future<List<_i19.Artist>?>.value(),
          )
          as _i13.Future<List<_i19.Artist>?>);

  @override
  _i13.Future<void> cacheSeasonalCollections(
    List<_i7.Collection>? collections,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cacheSeasonalCollections, [collections]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i7.Collection>?> getCachedSeasonalCollections() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedSeasonalCollections, []),
            returnValue: _i13.Future<List<_i7.Collection>?>.value(),
          )
          as _i13.Future<List<_i7.Collection>?>);

  @override
  _i13.Future<void> cacheBeginnerCollections(
    List<_i7.Collection>? collections,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cacheBeginnerCollections, [collections]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i7.Collection>?> getCachedBeginnerCollections() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedBeginnerCollections, []),
            returnValue: _i13.Future<List<_i7.Collection>?>.value(),
          )
          as _i13.Future<List<_i7.Collection>?>);

  @override
  _i13.Future<void> cacheTrendingSongs(List<_i17.Song>? songs) =>
      (super.noSuchMethod(
            Invocation.method(#cacheTrendingSongs, [songs]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i17.Song>?> getCachedTrendingSongs() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedTrendingSongs, []),
            returnValue: _i13.Future<List<_i17.Song>?>.value(),
          )
          as _i13.Future<List<_i17.Song>?>);

  @override
  _i13.Future<void> cacheTopArtists(List<_i19.Artist>? artists) =>
      (super.noSuchMethod(
            Invocation.method(#cacheTopArtists, [artists]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i19.Artist>?> getCachedTopArtists() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedTopArtists, []),
            returnValue: _i13.Future<List<_i19.Artist>?>.value(),
          )
          as _i13.Future<List<_i19.Artist>?>);

  @override
  _i13.Future<void> cacheNewSongs(List<_i17.Song>? songs) =>
      (super.noSuchMethod(
            Invocation.method(#cacheNewSongs, [songs]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i17.Song>?> getCachedNewSongs() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedNewSongs, []),
            returnValue: _i13.Future<List<_i17.Song>?>.value(),
          )
          as _i13.Future<List<_i17.Song>?>);

  @override
  _i13.Future<void> cacheHomeSections(List<dynamic>? sections) =>
      (super.noSuchMethod(
            Invocation.method(#cacheHomeSections, [sections]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<dynamic>?> getCachedHomeSections() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedHomeSections, []),
            returnValue: _i13.Future<List<dynamic>?>.value(),
          )
          as _i13.Future<List<dynamic>?>);

  @override
  _i13.Future<bool> isCacheStale(String? cacheKey, int? maxAgeMinutes) =>
      (super.noSuchMethod(
            Invocation.method(#isCacheStale, [cacheKey, maxAgeMinutes]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<void> cacheBannerImages(List<String>? imageUrls) =>
      (super.noSuchMethod(
            Invocation.method(#cacheBannerImages, [imageUrls]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<String>?> getCachedBannerImages() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedBannerImages, []),
            returnValue: _i13.Future<List<String>?>.value(),
          )
          as _i13.Future<List<String>?>);

  @override
  _i13.Future<bool> haveBannerImagesChanged(List<String>? newImageUrls) =>
      (super.noSuchMethod(
            Invocation.method(#haveBannerImagesChanged, [newImageUrls]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<void> set(String? key, String? data) =>
      (super.noSuchMethod(
            Invocation.method(#set, [key, data]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> get(String? key, {int? expirationMinutes = 30}) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [key],
              {#expirationMinutes: expirationMinutes},
            ),
            returnValue: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<void> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> cacheSetlists(List<_i20.Setlist>? setlists) =>
      (super.noSuchMethod(
            Invocation.method(#cacheSetlists, [setlists]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i20.Setlist>?> getCachedSetlists() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedSetlists, []),
            returnValue: _i13.Future<List<_i20.Setlist>?>.value(),
          )
          as _i13.Future<List<_i20.Setlist>?>);

  @override
  _i13.Future<void> cacheLikedSongs(List<_i17.Song>? likedSongs) =>
      (super.noSuchMethod(
            Invocation.method(#cacheLikedSongs, [likedSongs]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<List<_i17.Song>?> getCachedLikedSongs() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedLikedSongs, []),
            returnValue: _i13.Future<List<_i17.Song>?>.value(),
          )
          as _i13.Future<List<_i17.Song>?>);

  @override
  _i13.Future<void> clearSetlistCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearSetlistCache, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}

/// A class which mocks [CollectionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollectionService extends _i1.Mock implements _i21.CollectionService {
  MockCollectionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<Map<String, dynamic>> toggleLike(String? collectionId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleLike, [collectionId]),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<Map<String, dynamic>> getLikeStatus(String? collectionId) =>
      (super.noSuchMethod(
            Invocation.method(#getLikeStatus, [collectionId]),
            returnValue: _i13.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<List<_i7.Collection>> getLikedCollections() =>
      (super.noSuchMethod(
            Invocation.method(#getLikedCollections, []),
            returnValue: _i13.Future<List<_i7.Collection>>.value(
              <_i7.Collection>[],
            ),
          )
          as _i13.Future<List<_i7.Collection>>);

  @override
  _i13.Future<List<_i7.Collection>> getAllCollections({int? limit}) =>
      (super.noSuchMethod(
            Invocation.method(#getAllCollections, [], {#limit: limit}),
            returnValue: _i13.Future<List<_i7.Collection>>.value(
              <_i7.Collection>[],
            ),
          )
          as _i13.Future<List<_i7.Collection>>);

  @override
  _i13.Future<List<_i7.Collection>> searchCollections(
    String? query, {
    int? limit,
    _i22.CollectionSearchFilters? filters,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #searchCollections,
              [query],
              {#limit: limit, #filters: filters},
            ),
            returnValue: _i13.Future<List<_i7.Collection>>.value(
              <_i7.Collection>[],
            ),
          )
          as _i13.Future<List<_i7.Collection>>);

  @override
  _i13.Future<_i7.Collection> getCollectionById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getCollectionById, [id]),
            returnValue: _i13.Future<_i7.Collection>.value(
              _FakeCollection_16(
                this,
                Invocation.method(#getCollectionById, [id]),
              ),
            ),
          )
          as _i13.Future<_i7.Collection>);

  @override
  _i13.Future<List<_i7.Collection>> getFeaturedCollections({int? limit = 10}) =>
      (super.noSuchMethod(
            Invocation.method(#getFeaturedCollections, [], {#limit: limit}),
            returnValue: _i13.Future<List<_i7.Collection>>.value(
              <_i7.Collection>[],
            ),
          )
          as _i13.Future<List<_i7.Collection>>);

  @override
  _i13.Future<List<_i7.Collection>> getSeasonalCollections({
    int? limit = 10,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSeasonalCollections, [], {
              #limit: limit,
              #forceRefresh: forceRefresh,
            }),
            returnValue: _i13.Future<List<_i7.Collection>>.value(
              <_i7.Collection>[],
            ),
          )
          as _i13.Future<List<_i7.Collection>>);

  @override
  _i13.Future<List<_i7.Collection>> getBeginnerFriendlyCollections({
    int? limit = 10,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getBeginnerFriendlyCollections, [], {
              #limit: limit,
              #forceRefresh: forceRefresh,
            }),
            returnValue: _i13.Future<List<_i7.Collection>>.value(
              <_i7.Collection>[],
            ),
          )
          as _i13.Future<List<_i7.Collection>>);

  @override
  _i13.Future<_i7.Collection?> getCollectionByName(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#getCollectionByName, [name]),
            returnValue: _i13.Future<_i7.Collection?>.value(),
          )
          as _i13.Future<_i7.Collection?>);

  @override
  _i13.Future<List<dynamic>> getSongsInCollection(String? collectionId) =>
      (super.noSuchMethod(
            Invocation.method(#getSongsInCollection, [collectionId]),
            returnValue: _i13.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i13.Future<List<dynamic>>);
}

/// A class which mocks [DefaultCacheManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockDefaultCacheManager extends _i1.Mock
    implements _i8.DefaultCacheManager {
  MockDefaultCacheManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Config get config =>
      (super.noSuchMethod(
            Invocation.getter(#config),
            returnValue: _FakeConfig_17(this, Invocation.getter(#config)),
          )
          as _i8.Config);

  @override
  _i9.CacheStore get store =>
      (super.noSuchMethod(
            Invocation.getter(#store),
            returnValue: _FakeCacheStore_18(this, Invocation.getter(#store)),
          )
          as _i9.CacheStore);

  @override
  _i10.WebHelper get webHelper =>
      (super.noSuchMethod(
            Invocation.getter(#webHelper),
            returnValue: _FakeWebHelper_19(this, Invocation.getter(#webHelper)),
          )
          as _i10.WebHelper);

  @override
  _i13.Future<_i11.File> getSingleFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getSingleFile,
              [url],
              {#key: key, #headers: headers},
            ),
            returnValue: _i13.Future<_i11.File>.value(
              _FakeFile_20(
                this,
                Invocation.method(
                  #getSingleFile,
                  [url],
                  {#key: key, #headers: headers},
                ),
              ),
            ),
          )
          as _i13.Future<_i11.File>);

  @override
  _i13.Stream<_i8.FileInfo> getFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getFile, [url], {#key: key, #headers: headers}),
            returnValue: _i13.Stream<_i8.FileInfo>.empty(),
          )
          as _i13.Stream<_i8.FileInfo>);

  @override
  _i13.Stream<_i8.FileResponse> getFileStream(
    String? url, {
    String? key,
    Map<String, String>? headers,
    bool? withProgress = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getFileStream,
              [url],
              {#key: key, #headers: headers, #withProgress: withProgress},
            ),
            returnValue: _i13.Stream<_i8.FileResponse>.empty(),
          )
          as _i13.Stream<_i8.FileResponse>);

  @override
  _i13.Future<_i8.FileInfo> downloadFile(
    String? url, {
    String? key,
    Map<String, String>? authHeaders,
    bool? force = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadFile,
              [url],
              {#key: key, #authHeaders: authHeaders, #force: force},
            ),
            returnValue: _i13.Future<_i8.FileInfo>.value(
              _FakeFileInfo_21(
                this,
                Invocation.method(
                  #downloadFile,
                  [url],
                  {#key: key, #authHeaders: authHeaders, #force: force},
                ),
              ),
            ),
          )
          as _i13.Future<_i8.FileInfo>);

  @override
  _i13.Future<_i8.FileInfo?> getFileFromCache(
    String? key, {
    bool? ignoreMemCache = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getFileFromCache,
              [key],
              {#ignoreMemCache: ignoreMemCache},
            ),
            returnValue: _i13.Future<_i8.FileInfo?>.value(),
          )
          as _i13.Future<_i8.FileInfo?>);

  @override
  _i13.Future<_i8.FileInfo?> getFileFromMemory(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getFileFromMemory, [key]),
            returnValue: _i13.Future<_i8.FileInfo?>.value(),
          )
          as _i13.Future<_i8.FileInfo?>);

  @override
  _i13.Future<_i11.File> putFile(
    String? url,
    _i23.Uint8List? fileBytes, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = 'file',
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putFile,
              [url, fileBytes],
              {
                #key: key,
                #eTag: eTag,
                #maxAge: maxAge,
                #fileExtension: fileExtension,
              },
            ),
            returnValue: _i13.Future<_i11.File>.value(
              _FakeFile_20(
                this,
                Invocation.method(
                  #putFile,
                  [url, fileBytes],
                  {
                    #key: key,
                    #eTag: eTag,
                    #maxAge: maxAge,
                    #fileExtension: fileExtension,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i11.File>);

  @override
  _i13.Future<_i11.File> putFileStream(
    String? url,
    _i13.Stream<List<int>>? source, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = 'file',
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putFileStream,
              [url, source],
              {
                #key: key,
                #eTag: eTag,
                #maxAge: maxAge,
                #fileExtension: fileExtension,
              },
            ),
            returnValue: _i13.Future<_i11.File>.value(
              _FakeFile_20(
                this,
                Invocation.method(
                  #putFileStream,
                  [url, source],
                  {
                    #key: key,
                    #eTag: eTag,
                    #maxAge: maxAge,
                    #fileExtension: fileExtension,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i11.File>);

  @override
  _i13.Future<void> removeFile(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#removeFile, [key]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> emptyCache() =>
      (super.noSuchMethod(
            Invocation.method(#emptyCache, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Stream<_i8.FileResponse> getImageFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
    bool? withProgress = false,
    int? maxHeight,
    int? maxWidth,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getImageFile,
              [url],
              {
                #key: key,
                #headers: headers,
                #withProgress: withProgress,
                #maxHeight: maxHeight,
                #maxWidth: maxWidth,
              },
            ),
            returnValue: _i13.Stream<_i8.FileResponse>.empty(),
          )
          as _i13.Stream<_i8.FileResponse>);
}
